// Code generated by MockGen. DO NOT EDIT.
// Source: make_message.go

// Package mock_infra is a generated GoMock package.
package mock_infra

import (
	context "context"
	message "otomo/internal/app/domain/entity/message"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMessageMaker is a mock of MessageMaker interface.
type MockMessageMaker struct {
	ctrl     *gomock.Controller
	recorder *MockMessageMakerMockRecorder
}

// MockMessageMakerMockRecorder is the mock recorder for MockMessageMaker.
type MockMessageMakerMockRecorder struct {
	mock *MockMessageMaker
}

// NewMockMessageMaker creates a new mock instance.
func NewMockMessageMaker(ctrl *gomock.Controller) *MockMessageMaker {
	mock := &MockMessageMaker{ctrl: ctrl}
	mock.recorder = &MockMessageMakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageMaker) EXPECT() *MockMessageMakerMockRecorder {
	return m.recorder
}

// MakeFromMessageWithOtomo mocks base method.
func (m *MockMessageMaker) MakeFromMessageWithOtomo(ctx context.Context, msg *message.MessageWithOtomo) (*message.MessageWithOtomo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeFromMessageWithOtomo", ctx, msg)
	ret0, _ := ret[0].(*message.MessageWithOtomo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeFromMessageWithOtomo indicates an expected call of MakeFromMessageWithOtomo.
func (mr *MockMessageMakerMockRecorder) MakeFromMessageWithOtomo(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeFromMessageWithOtomo", reflect.TypeOf((*MockMessageMaker)(nil).MakeFromMessageWithOtomo), ctx, msg)
}
