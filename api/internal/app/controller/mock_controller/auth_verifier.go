// Code generated by MockGen. DO NOT EDIT.
// Source: auth_verifier.go

// Package mock_controller is a generated GoMock package.
package mock_controller

import (
	context "context"
	reflect "reflect"

	auth "firebase.google.com/go/v4/auth"
	gomock "github.com/golang/mock/gomock"
)

// MockIDTokenVerifier is a mock of IDTokenVerifier interface.
type MockIDTokenVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockIDTokenVerifierMockRecorder
}

// MockIDTokenVerifierMockRecorder is the mock recorder for MockIDTokenVerifier.
type MockIDTokenVerifierMockRecorder struct {
	mock *MockIDTokenVerifier
}

// NewMockIDTokenVerifier creates a new mock instance.
func NewMockIDTokenVerifier(ctrl *gomock.Controller) *MockIDTokenVerifier {
	mock := &MockIDTokenVerifier{ctrl: ctrl}
	mock.recorder = &MockIDTokenVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDTokenVerifier) EXPECT() *MockIDTokenVerifierMockRecorder {
	return m.recorder
}

// VerifyIDTokenAndCheckRevoked mocks base method.
func (m *MockIDTokenVerifier) VerifyIDTokenAndCheckRevoked(ctx context.Context, tokenStr string) (*auth.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyIDTokenAndCheckRevoked", ctx, tokenStr)
	ret0, _ := ret[0].(*auth.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyIDTokenAndCheckRevoked indicates an expected call of VerifyIDTokenAndCheckRevoked.
func (mr *MockIDTokenVerifierMockRecorder) VerifyIDTokenAndCheckRevoked(ctx, tokenStr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyIDTokenAndCheckRevoked", reflect.TypeOf((*MockIDTokenVerifier)(nil).VerifyIDTokenAndCheckRevoked), ctx, tokenStr)
}
