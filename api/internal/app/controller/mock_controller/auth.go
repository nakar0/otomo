// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package mock_controller is a generated GoMock package.
package mock_controller

import (
	context "context"
	reflect "reflect"

	auth "firebase.google.com/go/auth"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthVerifier is a mock of AuthVerifier interface.
type MockAuthVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockAuthVerifierMockRecorder
}

// MockAuthVerifierMockRecorder is the mock recorder for MockAuthVerifier.
type MockAuthVerifierMockRecorder struct {
	mock *MockAuthVerifier
}

// NewMockAuthVerifier creates a new mock instance.
func NewMockAuthVerifier(ctrl *gomock.Controller) *MockAuthVerifier {
	mock := &MockAuthVerifier{ctrl: ctrl}
	mock.recorder = &MockAuthVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthVerifier) EXPECT() *MockAuthVerifierMockRecorder {
	return m.recorder
}

// VerifyIDTokenAndCheckRevoked mocks base method.
func (m *MockAuthVerifier) VerifyIDTokenAndCheckRevoked(ctx context.Context, tokenStr string) (*auth.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyIDTokenAndCheckRevoked", ctx, tokenStr)
	ret0, _ := ret[0].(*auth.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyIDTokenAndCheckRevoked indicates an expected call of VerifyIDTokenAndCheckRevoked.
func (mr *MockAuthVerifierMockRecorder) VerifyIDTokenAndCheckRevoked(ctx, tokenStr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyIDTokenAndCheckRevoked", reflect.TypeOf((*MockAuthVerifier)(nil).VerifyIDTokenAndCheckRevoked), ctx, tokenStr)
}

// VerifyUsernameAndPassword mocks base method.
func (m *MockAuthVerifier) VerifyUsernameAndPassword(ctx context.Context, username, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyUsernameAndPassword", ctx, username, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyUsernameAndPassword indicates an expected call of VerifyUsernameAndPassword.
func (mr *MockAuthVerifierMockRecorder) VerifyUsernameAndPassword(ctx, username, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyUsernameAndPassword", reflect.TypeOf((*MockAuthVerifier)(nil).VerifyUsernameAndPassword), ctx, username, password)
}
