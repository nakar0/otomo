// source: message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var location_pb = require('./location_pb.js');
goog.object.extend(proto, location_pb);
goog.exportSymbol('proto.ExtractedPlace', null, global);
goog.exportSymbol('proto.GeocodedPlace', null, global);
goog.exportSymbol('proto.Message', null, global);
goog.exportSymbol('proto.Message.StructCase', null, global);
goog.exportSymbol('proto.MessageChunk', null, global);
goog.exportSymbol('proto.PlaceDetailsStruct', null, global);
goog.exportSymbol('proto.PlaceExtraction', null, global);
goog.exportSymbol('proto.PlacesStruct', null, global);
goog.exportSymbol('proto.Role', null, global);
goog.exportSymbol('proto.RouteStruct', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.Message.oneofGroups_);
};
goog.inherits(proto.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Message.displayName = 'proto.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PlaceExtraction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PlaceExtraction.repeatedFields_, null);
};
goog.inherits(proto.PlaceExtraction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PlaceExtraction.displayName = 'proto.PlaceExtraction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ExtractedPlace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ExtractedPlace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ExtractedPlace.displayName = 'proto.ExtractedPlace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GeocodedPlace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GeocodedPlace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GeocodedPlace.displayName = 'proto.GeocodedPlace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MessageChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MessageChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MessageChunk.displayName = 'proto.MessageChunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PlacesStruct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PlacesStruct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PlacesStruct.displayName = 'proto.PlacesStruct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RouteStruct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RouteStruct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RouteStruct.displayName = 'proto.RouteStruct';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PlaceDetailsStruct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PlaceDetailsStruct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PlaceDetailsStruct.displayName = 'proto.PlaceDetailsStruct';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.Message.oneofGroups_ = [[9,10,11]];

/**
 * @enum {number}
 */
proto.Message.StructCase = {
  STRUCT_NOT_SET: 0,
  PLACES_STRUCT: 9,
  ROUTE_STRUCT: 10,
  PLACE_DETAILS_STRUCT: 11
};

/**
 * @return {proto.Message.StructCase}
 */
proto.Message.prototype.getStructCase = function() {
  return /** @type {proto.Message.StructCase} */(jspb.Message.computeOneofCase(this, proto.Message.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sentAt: (f = msg.getSentAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    clientId: (f = msg.getClientId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    placeExtraction: (f = msg.getPlaceExtraction()) && proto.PlaceExtraction.toObject(includeInstance, f),
    content: jspb.Message.getFieldWithDefault(msg, 7, ""),
    structName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    placesStruct: (f = msg.getPlacesStruct()) && proto.PlacesStruct.toObject(includeInstance, f),
    routeStruct: (f = msg.getRouteStruct()) && proto.RouteStruct.toObject(includeInstance, f),
    placeDetailsStruct: (f = msg.getPlaceDetailsStruct()) && proto.PlaceDetailsStruct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Message}
 */
proto.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Message;
  return proto.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Message}
 */
proto.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {!proto.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentAt(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 6:
      var value = new proto.PlaceExtraction;
      reader.readMessage(value,proto.PlaceExtraction.deserializeBinaryFromReader);
      msg.setPlaceExtraction(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructName(value);
      break;
    case 9:
      var value = new proto.PlacesStruct;
      reader.readMessage(value,proto.PlacesStruct.deserializeBinaryFromReader);
      msg.setPlacesStruct(value);
      break;
    case 10:
      var value = new proto.RouteStruct;
      reader.readMessage(value,proto.RouteStruct.deserializeBinaryFromReader);
      msg.setRouteStruct(value);
      break;
    case 11:
      var value = new proto.PlaceDetailsStruct;
      reader.readMessage(value,proto.PlaceDetailsStruct.deserializeBinaryFromReader);
      msg.setPlaceDetailsStruct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSentAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getPlaceExtraction();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.PlaceExtraction.serializeBinaryToWriter
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStructName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPlacesStruct();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.PlacesStruct.serializeBinaryToWriter
    );
  }
  f = message.getRouteStruct();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.RouteStruct.serializeBinaryToWriter
    );
  }
  f = message.getPlaceDetailsStruct();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.PlaceDetailsStruct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Message.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.Message.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Role role = 3;
 * @return {!proto.Role}
 */
proto.Message.prototype.getRole = function() {
  return /** @type {!proto.Role} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Role} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp sent_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Message.prototype.getSentAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setSentAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearSentAt = function() {
  return this.setSentAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasSentAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue client_id = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.Message.prototype.getClientId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setClientId = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearClientId = function() {
  return this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PlaceExtraction place_extraction = 6;
 * @return {?proto.PlaceExtraction}
 */
proto.Message.prototype.getPlaceExtraction = function() {
  return /** @type{?proto.PlaceExtraction} */ (
    jspb.Message.getWrapperField(this, proto.PlaceExtraction, 6));
};


/**
 * @param {?proto.PlaceExtraction|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setPlaceExtraction = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearPlaceExtraction = function() {
  return this.setPlaceExtraction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasPlaceExtraction = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string content = 7;
 * @return {string}
 */
proto.Message.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string struct_name = 8;
 * @return {string}
 */
proto.Message.prototype.getStructName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.setStructName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional PlacesStruct places_struct = 9;
 * @return {?proto.PlacesStruct}
 */
proto.Message.prototype.getPlacesStruct = function() {
  return /** @type{?proto.PlacesStruct} */ (
    jspb.Message.getWrapperField(this, proto.PlacesStruct, 9));
};


/**
 * @param {?proto.PlacesStruct|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setPlacesStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearPlacesStruct = function() {
  return this.setPlacesStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasPlacesStruct = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RouteStruct route_struct = 10;
 * @return {?proto.RouteStruct}
 */
proto.Message.prototype.getRouteStruct = function() {
  return /** @type{?proto.RouteStruct} */ (
    jspb.Message.getWrapperField(this, proto.RouteStruct, 10));
};


/**
 * @param {?proto.RouteStruct|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setRouteStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearRouteStruct = function() {
  return this.setRouteStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasRouteStruct = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PlaceDetailsStruct place_details_struct = 11;
 * @return {?proto.PlaceDetailsStruct}
 */
proto.Message.prototype.getPlaceDetailsStruct = function() {
  return /** @type{?proto.PlaceDetailsStruct} */ (
    jspb.Message.getWrapperField(this, proto.PlaceDetailsStruct, 11));
};


/**
 * @param {?proto.PlaceDetailsStruct|undefined} value
 * @return {!proto.Message} returns this
*/
proto.Message.prototype.setPlaceDetailsStruct = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Message} returns this
 */
proto.Message.prototype.clearPlaceDetailsStruct = function() {
  return this.setPlaceDetailsStruct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Message.prototype.hasPlaceDetailsStruct = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PlaceExtraction.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PlaceExtraction.prototype.toObject = function(opt_includeInstance) {
  return proto.PlaceExtraction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PlaceExtraction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlaceExtraction.toObject = function(includeInstance, msg) {
  var f, obj = {
    placesList: jspb.Message.toObjectList(msg.getPlacesList(),
    proto.ExtractedPlace.toObject, includeInstance),
    processedAt: (f = msg.getProcessedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    error: (f = msg.getError()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PlaceExtraction}
 */
proto.PlaceExtraction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PlaceExtraction;
  return proto.PlaceExtraction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PlaceExtraction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PlaceExtraction}
 */
proto.PlaceExtraction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ExtractedPlace;
      reader.readMessage(value,proto.ExtractedPlace.deserializeBinaryFromReader);
      msg.addPlaces(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setProcessedAt(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PlaceExtraction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PlaceExtraction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PlaceExtraction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlaceExtraction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ExtractedPlace.serializeBinaryToWriter
    );
  }
  f = message.getProcessedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ExtractedPlace places = 1;
 * @return {!Array<!proto.ExtractedPlace>}
 */
proto.PlaceExtraction.prototype.getPlacesList = function() {
  return /** @type{!Array<!proto.ExtractedPlace>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ExtractedPlace, 1));
};


/**
 * @param {!Array<!proto.ExtractedPlace>} value
 * @return {!proto.PlaceExtraction} returns this
*/
proto.PlaceExtraction.prototype.setPlacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ExtractedPlace=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ExtractedPlace}
 */
proto.PlaceExtraction.prototype.addPlaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ExtractedPlace, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PlaceExtraction} returns this
 */
proto.PlaceExtraction.prototype.clearPlacesList = function() {
  return this.setPlacesList([]);
};


/**
 * optional google.protobuf.Timestamp processed_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.PlaceExtraction.prototype.getProcessedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.PlaceExtraction} returns this
*/
proto.PlaceExtraction.prototype.setProcessedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PlaceExtraction} returns this
 */
proto.PlaceExtraction.prototype.clearProcessedAt = function() {
  return this.setProcessedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PlaceExtraction.prototype.hasProcessedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue error = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.PlaceExtraction.prototype.getError = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.PlaceExtraction} returns this
*/
proto.PlaceExtraction.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PlaceExtraction} returns this
 */
proto.PlaceExtraction.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PlaceExtraction.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ExtractedPlace.prototype.toObject = function(opt_includeInstance) {
  return proto.ExtractedPlace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ExtractedPlace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExtractedPlace.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    geocodedPlace: (f = msg.getGeocodedPlace()) && proto.GeocodedPlace.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ExtractedPlace}
 */
proto.ExtractedPlace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ExtractedPlace;
  return proto.ExtractedPlace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ExtractedPlace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ExtractedPlace}
 */
proto.ExtractedPlace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = new proto.GeocodedPlace;
      reader.readMessage(value,proto.GeocodedPlace.deserializeBinaryFromReader);
      msg.setGeocodedPlace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ExtractedPlace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ExtractedPlace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ExtractedPlace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ExtractedPlace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGeocodedPlace();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.GeocodedPlace.serializeBinaryToWriter
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.ExtractedPlace.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ExtractedPlace} returns this
 */
proto.ExtractedPlace.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GeocodedPlace geocoded_place = 2;
 * @return {?proto.GeocodedPlace}
 */
proto.ExtractedPlace.prototype.getGeocodedPlace = function() {
  return /** @type{?proto.GeocodedPlace} */ (
    jspb.Message.getWrapperField(this, proto.GeocodedPlace, 2));
};


/**
 * @param {?proto.GeocodedPlace|undefined} value
 * @return {!proto.ExtractedPlace} returns this
*/
proto.ExtractedPlace.prototype.setGeocodedPlace = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ExtractedPlace} returns this
 */
proto.ExtractedPlace.prototype.clearGeocodedPlace = function() {
  return this.setGeocodedPlace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ExtractedPlace.prototype.hasGeocodedPlace = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GeocodedPlace.prototype.toObject = function(opt_includeInstance) {
  return proto.GeocodedPlace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GeocodedPlace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GeocodedPlace.toObject = function(includeInstance, msg) {
  var f, obj = {
    googlePlaceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    latLng: (f = msg.getLatLng()) && location_pb.LatLng.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GeocodedPlace}
 */
proto.GeocodedPlace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GeocodedPlace;
  return proto.GeocodedPlace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GeocodedPlace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GeocodedPlace}
 */
proto.GeocodedPlace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGooglePlaceId(value);
      break;
    case 2:
      var value = new location_pb.LatLng;
      reader.readMessage(value,location_pb.LatLng.deserializeBinaryFromReader);
      msg.setLatLng(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GeocodedPlace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GeocodedPlace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GeocodedPlace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GeocodedPlace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGooglePlaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLatLng();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      location_pb.LatLng.serializeBinaryToWriter
    );
  }
};


/**
 * optional string google_place_id = 1;
 * @return {string}
 */
proto.GeocodedPlace.prototype.getGooglePlaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.GeocodedPlace} returns this
 */
proto.GeocodedPlace.prototype.setGooglePlaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LatLng lat_lng = 2;
 * @return {?proto.LatLng}
 */
proto.GeocodedPlace.prototype.getLatLng = function() {
  return /** @type{?proto.LatLng} */ (
    jspb.Message.getWrapperField(this, location_pb.LatLng, 2));
};


/**
 * @param {?proto.LatLng|undefined} value
 * @return {!proto.GeocodedPlace} returns this
*/
proto.GeocodedPlace.prototype.setLatLng = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GeocodedPlace} returns this
 */
proto.GeocodedPlace.prototype.clearLatLng = function() {
  return this.setLatLng(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GeocodedPlace.prototype.hasLatLng = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MessageChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.MessageChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MessageChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MessageChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sentAt: (f = msg.getSentAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    clientId: (f = msg.getClientId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    isLast: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    content: jspb.Message.getFieldWithDefault(msg, 7, ""),
    structName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    struct: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MessageChunk}
 */
proto.MessageChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MessageChunk;
  return proto.MessageChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MessageChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MessageChunk}
 */
proto.MessageChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = /** @type {!proto.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentAt(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLast(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStruct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MessageChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MessageChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MessageChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MessageChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSentAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getIsLast();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStructName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStruct();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.MessageChunk.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.MessageChunk.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Role role = 3;
 * @return {!proto.Role}
 */
proto.MessageChunk.prototype.getRole = function() {
  return /** @type {!proto.Role} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Role} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp sent_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.MessageChunk.prototype.getSentAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.MessageChunk} returns this
*/
proto.MessageChunk.prototype.setSentAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.clearSentAt = function() {
  return this.setSentAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.MessageChunk.prototype.hasSentAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.StringValue client_id = 5;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.MessageChunk.prototype.getClientId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 5));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.MessageChunk} returns this
*/
proto.MessageChunk.prototype.setClientId = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.clearClientId = function() {
  return this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.MessageChunk.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool is_last = 6;
 * @return {boolean}
 */
proto.MessageChunk.prototype.getIsLast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setIsLast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string content = 7;
 * @return {string}
 */
proto.MessageChunk.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string struct_name = 8;
 * @return {string}
 */
proto.MessageChunk.prototype.getStructName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setStructName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string struct = 9;
 * @return {string}
 */
proto.MessageChunk.prototype.getStruct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.MessageChunk} returns this
 */
proto.MessageChunk.prototype.setStruct = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PlacesStruct.prototype.toObject = function(opt_includeInstance) {
  return proto.PlacesStruct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PlacesStruct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlacesStruct.toObject = function(includeInstance, msg) {
  var f, obj = {
    prologue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epilogue: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PlacesStruct}
 */
proto.PlacesStruct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PlacesStruct;
  return proto.PlacesStruct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PlacesStruct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PlacesStruct}
 */
proto.PlacesStruct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrologue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpilogue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PlacesStruct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PlacesStruct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PlacesStruct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlacesStruct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrologue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpilogue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string prologue = 1;
 * @return {string}
 */
proto.PlacesStruct.prototype.getPrologue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlacesStruct} returns this
 */
proto.PlacesStruct.prototype.setPrologue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string epilogue = 2;
 * @return {string}
 */
proto.PlacesStruct.prototype.getEpilogue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlacesStruct} returns this
 */
proto.PlacesStruct.prototype.setEpilogue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RouteStruct.prototype.toObject = function(opt_includeInstance) {
  return proto.RouteStruct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RouteStruct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RouteStruct.toObject = function(includeInstance, msg) {
  var f, obj = {
    prologue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epilogue: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RouteStruct}
 */
proto.RouteStruct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RouteStruct;
  return proto.RouteStruct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RouteStruct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RouteStruct}
 */
proto.RouteStruct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrologue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpilogue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RouteStruct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RouteStruct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RouteStruct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RouteStruct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrologue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpilogue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string prologue = 1;
 * @return {string}
 */
proto.RouteStruct.prototype.getPrologue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.RouteStruct} returns this
 */
proto.RouteStruct.prototype.setPrologue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string epilogue = 2;
 * @return {string}
 */
proto.RouteStruct.prototype.getEpilogue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.RouteStruct} returns this
 */
proto.RouteStruct.prototype.setEpilogue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PlaceDetailsStruct.prototype.toObject = function(opt_includeInstance) {
  return proto.PlaceDetailsStruct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PlaceDetailsStruct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlaceDetailsStruct.toObject = function(includeInstance, msg) {
  var f, obj = {
    prologue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epilogue: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PlaceDetailsStruct}
 */
proto.PlaceDetailsStruct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PlaceDetailsStruct;
  return proto.PlaceDetailsStruct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PlaceDetailsStruct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PlaceDetailsStruct}
 */
proto.PlaceDetailsStruct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrologue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpilogue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PlaceDetailsStruct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PlaceDetailsStruct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PlaceDetailsStruct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PlaceDetailsStruct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrologue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpilogue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string prologue = 1;
 * @return {string}
 */
proto.PlaceDetailsStruct.prototype.getPrologue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlaceDetailsStruct} returns this
 */
proto.PlaceDetailsStruct.prototype.setPrologue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string epilogue = 2;
 * @return {string}
 */
proto.PlaceDetailsStruct.prototype.getEpilogue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PlaceDetailsStruct} returns this
 */
proto.PlaceDetailsStruct.prototype.setEpilogue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.Role = {
  UNKNOWN: 0,
  USER: 1,
  OTOMO: 2
};

goog.object.extend(exports, proto);
